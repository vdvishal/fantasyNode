{
  "openapi": "3.0.1",
  "info": {
    "title": "Swagger Petstore",
    "description": "",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:3008/api/v1"
    },
    {
      "url": "http://api.link.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Everything about users"
    },
    {
      "name": "match",
      "description": "Everything about match"
    },
    {
      "name": "contest",
      "description": "Everything about contest"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "User signup",
        "requestBody": {
          "description": "User object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "User signup",
        "requestBody": {
          "description": "User object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
                }
              
            }
          },
          "required": true
        },
        "responses": {
          "200": {
             
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/match": {
      "get": {
        "tags": [
          "match"
        ],
        "summary": "Get matches",
        "parameters": [
          {
            "name": "matchId",
            "in": "query",
            "description": "MatchId if getting a specific match or 0 for all match",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/match/user": {
      "get": {
        "tags": [
          "match"
        ],
        "summary": "Get matches",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "type = 1 -> upcoming; type = 2 -> live; type = 3 -> completed ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "headers",
            "description": "JWT token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/contest/{matchId}": {
      "get": {
        "tags": [
          "contest"
        ],
        "summary": "Get contest",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "description": "Get contest type 1 in the match",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/contest/matchUps/{matchId}": {
      "get": {
        "tags": [
          "contest"
        ],
        "summary": "Get matchups contest",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "description": "Get contest type 3 in the match",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/contest/join": {
      "post": {
        "tags": [
          "contest"
        ],
        "summary": "Join Contest",
        "requestBody": {
          "description": "User object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "headers",
            "description": "JWT token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],

        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}
